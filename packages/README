#summary This README describes how NautilusSvn is packaged for several distributions.

= Introduction =
For most distributions we've created a set of helper scripts which automate the 
instructions given below.

= Instructions =

== Ubuntu ==
Most of what is described here is based on https://wiki.ubuntu.com/PackagingGuide/Complete
and http://www.debian.org/doc/debian-policy. Since we're technically a Python package
(a 'private module' to be precise) we also have to adhere to http://wiki.debian.org/DebianPython/NewPolicy.

* Update the changelog entry in ./packages/ubuntu using `debchange` (you'll have
  to change to the ./packages/ubuntu directory to do this) and commit your changes.
* Export the version of NautilusSvn you want to package from the repository.
  The root directory (containing the source etc.) should be named: 
  nautilussvn-<version> (example: nautilussvn-0.11-1).
* Create a .tar.gz file of the exported directory in the following format: 
  nautilussvn_<version>.orig.tar.gz (example: nautilussvn_0.11-1.orig.tar.gz).
* Create a debian directory in the root directory based on the directory provided 
  in ./packages/ubuntu/.
* Build the Debian package using `debuild`.

== Generic RPMs ==
The building of RPMs is completely handled by distutils, you only have to call it
using: `python setup.py bdist --format rpm`. This will also generate a .spec
file for which some properties are taken from setup.cfg. RPMs are a little different
from Debian packages in that they are binary packages, the .spec file is included
in the headers but is not visible when simply extracting the package. You can
use `rpm -qi -b nautilussvn-<version>.noarch.rpm` to show this information.

The resulting package can be installed using `yum install nautilussvn-<version>.noarch.rpm`
which will also resolve the dependencies (unlike `rpm -i`).

If you want to find out more about RPMs see: http://www.rpm.org/max-rpm/

== Fedora ==
# TODO: Not sure if the RPMs generated by distutils conform to Fedora's packaging 
# guidelines (if there are any). 

For an example of a .spec file see: https://admin.fedoraproject.org/pkgdb/packages/name/nautilus

== Gentoo ==
# TODO: I have no experience with Gentoo what so ever, but a couple of people 
# (Rion and Gon√ßalo Silva) have been so kind to supply us with .ebuild files 
# (which I assume are Gentoo's packages). Perhaps they would be intersted in 
# creating a helper script to generate these packages automatically (which we
# can then add to the repository).

= General =

* Exporting a directory from the repository: svn export [PATH]
* Creating a tar.gz file: tar -zcvf <filename>.tar.gz <directory>
