diff -Nur -x '*.orig' -x '*~' trunk/nautilussvn/lib/configspec/configspec.ini trunk.new/nautilussvn/lib/configspec/configspec.ini
--- trunk/nautilussvn/lib/configspec/configspec.ini	1970-01-01 08:00:00.000000000 +0800
+++ trunk.new/nautilussvn/lib/configspec/configspec.ini	2009-07-08 17:45:45.000000000 +0800
@@ -0,0 +1,19 @@
+[general]
+language = string(default="English")
+enable_attributes = boolean(default=True)
+enable_emblems = boolean(default=True)
+enable_recursive = boolean(default=True)
+show_debug = boolean(default=False)
+
+[external]
+diff_tool = string(default="/usr/bin/meld")
+diff_tool_swap = boolean(default=False)
+repo_browser = string(default="firefox")
+
+[cache]
+number_repositories = integer(default=30)
+number_messages = integer(default=30)
+
+[logging]
+type = option("None", "File", "Console", "Both", default="File")
+level = option("Debug", "Warning", "Info", "Error", "Critical", default="Error")
diff -Nur -x '*.orig' -x '*~' trunk/nautilussvn/lib/extensions/nautilus/NautilusSvn.py trunk.new/nautilussvn/lib/extensions/nautilus/NautilusSvn.py
--- trunk/nautilussvn/lib/extensions/nautilus/NautilusSvn.py	2009-07-08 17:45:45.000000000 +0800
+++ trunk.new/nautilussvn/lib/extensions/nautilus/NautilusSvn.py	2009-07-08 17:45:45.000000000 +0800
@@ -590,7 +590,7 @@
                         "args": None
                     }
                 },
-                "condition": (lambda: True),
+                "condition": (lambda: settings.get("general", "show_debug")),
                 "submenus": [
                     {
                         "identifier": "NautilusSvn::Bugs",
diff -Nur -x '*.orig' -x '*~' trunk/nautilussvn/lib/settings.py trunk.new/nautilussvn/lib/settings.py
--- trunk/nautilussvn/lib/settings.py	2009-06-01 15:16:33.000000000 +0800
+++ trunk.new/nautilussvn/lib/settings.py	2009-07-08 17:45:45.000000000 +0800
@@ -27,9 +27,11 @@
 """
 
 import os
+from os.path import dirname
 
 import shutil
 import configobj
+import validate
 
 def get_home_folder():
     """ 
@@ -62,27 +64,18 @@
 
 SETTINGS_FILE = "%s/settings.conf" % get_home_folder()
 
-DEFAULT_SETTINGS = {
-    "general": {
-        "language": "English",
-        "enable_attributes": 1,
-        "enable_emblems": 1,
-        "enable_recursive": 1
-    },
-    "external": {
-        "diff_tool": "/usr/bin/meld",
-        "diff_tool_swap": 0,
-        "repo_browser": "firefox"
-    },
-    "cache": {
-        "number_repositories": 30,
-        "number_messages": 30
-    },
-    "logging": {
-        "type": "File",
-        "level": "Error"
-    }
-}
+def find_configspec():
+    # FIXME: this needs to be modified once configspec.ini is placed in the data folder
+    configspec = os.path.join(dirname(__file__), "configspec/configspec.ini")
+    if os.path.exists(configspec):
+        return configspec
+    elif os.path.exists("/usr/share/nautilussvn/configspec.ini"):
+        return "/usr/share/nautilussvn/configspec.ini"
+    else:
+        # FIXME: what if we can't find anything?
+        return None
+
+SETTINGS_SPEC = find_configspec()
 
 class SettingsManager:
     """
@@ -102,15 +95,31 @@
     """
     
     def __init__(self):
-    
-        if not os.path.exists(SETTINGS_FILE):
-            self.use_default_settings()
-            self.write()
-    
+        
         self.settings = configobj.ConfigObj(
-            SETTINGS_FILE, 
-            indent_type="    "
+            infile=SETTINGS_FILE,
+            create_empty=True,
+            indent_type="    ",
+            configspec=SETTINGS_SPEC
         )
+        
+        self.validator = validate.Validator()
+        
+        valid = self.settings.validate(self.validator)
+                
+        # We cannot use "if not valid" here, since validate() returns a dict
+        # if validation fails!
+        # See:
+        # http://www.voidspace.org.uk/python/articles/configobj.shtml#validation
+        if not (valid is True):
+            # What to do here?
+            # We could only get to this point if:
+            #   1. The user config file existed
+            #   2. It was invalid
+            # One option is to copy it to a different file and recreate it...
+            print "User configuration not valid. Backing up and recreating."
+            self.backup_and_rewrite_config()
+        
 
     def get(self, section=None, keyword=None):
         """
@@ -159,12 +168,7 @@
         
         if section not in self.settings:
             self.settings[section] = {}
-            
-        if value == True:
-            value = 1
-        elif value == False:
-            value = 0
-        
+
         self.settings[section][keyword] = value
             
     def set_comments(self, section, comments=[]):
@@ -211,6 +215,7 @@
         """
         self.settings = configobj.ConfigObj(indent_type="    ")
         self.settings.filename = SETTINGS_FILE
+        # Maybe we should use self.settings.reset()?
 
     def use_default_settings(self):
         """
@@ -255,5 +260,43 @@
             
         return returner
 
+    def backup_and_rewrite_config(self) :
+        """
+        Backs up the user configuration file (for debugging) and rewrites a
+        valid config file.
+        
+        The name of the backup file is the name of the settings file plus an
+        incremental count.
+        
+        """
+        # We need to check that the file doesn't already exist, in case this has
+        # happened before.
+        new_file_free = False
+        renumber = 0
+
+        while not new_file_free:
+            new_name = "%s.%02i" % (SETTINGS_FILE, renumber)
+            
+            # FIXME: is this too paranoid?
+            if not os.path.exists(new_name):
+                    
+                    new_file_free = True
+                    
+                    created = False
+                    
+                    try:
+                        os.rename(SETTINGS_FILE, new_name)
+                        created = True
+                    except IOError:
+                        # Paranoid again?
+                        print "Could not back up user configuration."
+                        
+                    if created:
+                        self.settings.reset()
+                        self.write()
+            else:
+                renumber += 1
+
+
 if __name__ == "__main__":
     pass
diff -Nur -x '*.orig' -x '*~' trunk/nautilussvn/ui/glade/settings.glade trunk.new/nautilussvn/ui/glade/settings.glade
--- trunk/nautilussvn/ui/glade/settings.glade	2009-06-01 15:16:33.000000000 +0800
+++ trunk.new/nautilussvn/ui/glade/settings.glade	2009-07-08 17:45:45.000000000 +0800
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <!DOCTYPE glade-interface SYSTEM "glade-2.0.dtd">
-<!--Generated with glade3 3.4.5 on Sun Mar 15 11:43:09 2009 -->
+<!--Generated with glade3 3.4.5 on Sun May 31 13:47:41 2009 -->
 <glade-interface>
   <widget class="GtkWindow" id="Settings">
     <property name="width_request">550</property>
@@ -125,6 +125,21 @@
                                     <property name="position">2</property>
                                   </packing>
                                 </child>
+                                <child>
+                                  <widget class="GtkCheckButton" id="show_debug">
+                                    <property name="visible">True</property>
+                                    <property name="can_focus">True</property>
+                                    <property name="tooltip" translatable="yes">The debug menu is used to diagnose problems with NautilusSVN itself</property>
+                                    <property name="label" translatable="yes">Show NautilusSVN debugging tools</property>
+                                    <property name="response_id">0</property>
+                                    <property name="draw_indicator">True</property>
+                                  </widget>
+                                  <packing>
+                                    <property name="expand">False</property>
+                                    <property name="fill">False</property>
+                                    <property name="position">3</property>
+                                  </packing>
+                                </child>
                               </widget>
                               <packing>
                                 <property name="expand">False</property>
diff -Nur -x '*.orig' -x '*~' trunk/nautilussvn/ui/settings.py trunk.new/nautilussvn/ui/settings.py
--- trunk/nautilussvn/ui/settings.py	2009-06-01 15:16:33.000000000 +0800
+++ trunk.new/nautilussvn/ui/settings.py	2009-07-08 17:46:37.000000000 +0800
@@ -61,6 +61,9 @@
         self.get_widget("enable_recursive").set_active(
             int(self.settings.get("general", "enable_recursive"))
         )
+        self.get_widget("show_debug").set_active(
+            int(self.settings.get("general","show_debug"))
+        )
         self.get_widget("diff_tool").set_text(
             self.settings.get("external", "diff_tool")
         )
@@ -68,13 +71,13 @@
             int(self.settings.get("external", "diff_tool_swap"))
         )
         self.get_widget("repo_browser").set_text(
-            self.settings.get("external", "repo_browser")
+            str(self.settings.get("external", "repo_browser"))
         )
         self.get_widget("cache_number_repositories").set_text(
-            self.settings.get("cache", "number_repositories")
+            str(self.settings.get("cache", "number_repositories"))
         )
         self.get_widget("cache_number_messages").set_text(
-            self.settings.get("cache", "number_messages")
+            str(self.settings.get("cache", "number_messages"))
         )
         
         self.logging_type = nautilussvn.ui.widget.ComboBox(
@@ -126,6 +129,10 @@
             self.get_widget("enable_recursive").get_active()
         )
         self.settings.set(
+            "general", "show_debug",
+            self.get_widget("show_debug").get_active()
+        )
+        self.settings.set(
             "external", "diff_tool",
             self.get_widget("diff_tool").get_text()
         )
diff -Nur -x '*.orig' -x '*~' trunk/setup.py trunk.new/setup.py
--- trunk/setup.py	2009-06-07 14:35:47.000000000 +0800
+++ trunk.new/setup.py	2009-07-08 17:45:45.000000000 +0800
@@ -116,6 +116,13 @@
 # Icons
 icons = include_by_pattern("nautilussvn/data/icons/hicolor", icon_theme_directory, ".svg")
 
+# Config parsing specification
+config_spec = [(
+    # FIXME: hard coded prefix!
+    "/usr/share/nautilussvn",
+    ["nautilussvn/lib/configspec/configspec.ini"]
+)]
+
 # Update notifier
 update_notifier = [("/usr/share/nautilussvn", [
     "packages/ubuntu/debian/nautilussvn-restart-required.update-notifier",
@@ -124,7 +131,6 @@
 
 # Documentation
 documentation = [("/usr/share/doc/nautilussvn", [
-    "README",
     "AUTHORS",
     "MAINTAINERS",
     "CREDITS",
@@ -164,7 +170,7 @@
             "ui/glade/*.glade"
         ]
     },
-    data_files=nautilus_extension + command_line_tool + translations + icons + documentation + update_notifier
+    data_files=nautilus_extension + command_line_tool + translations + icons + documentation + update_notifier + config_spec
 )
 
 #
